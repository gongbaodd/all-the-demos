# https://moonrepo.dev/docs/config/toolchain
$schema: 'https://moonrepo.dev/schemas/toolchain.json'

# Extend and inherit an external configuration file. Must be a valid HTTPS URL or file system path.
# extends: './shared/toolchain.yml'

# Configures Rust within the toolchain.
rust:
  # The Rust toolchain to use. Must be a semantic version or release channel.
  version: '1.66'

  # List of Cargo binaries to install globally and make available.
  bins: []

  # List of rustup toolchain components to install and make available.
  components: []

  # Sync the configured version above as a channel to the root `rust-toolchain.toml` config.
  syncToolchainConfig: false

  # List of rustup toolchain targets to install and make available.
  targets: []

# Configures how moon integrates with TypeScript.
typescript:
  # When `syncProjectReferences` is enabled and a dependent project reference
  # *does not* have a `tsconfig.json`, automatically create one.
  createMissingConfig: true

  # Append the sources of each project reference to the `include` field
  # of each applicable project's `tsconfig.json`.
  includeProjectReferenceSources: true

  # Append shared types (from the TypeScript root) to the `include` field
  # of every project's `tsconfig.json`.
  includeSharedTypes: true

  # Name of `tsconfig.json` file in each project root.
  # projectConfigFileName: 'tsconfig.json'

  # Path to the TypeScript root, relative from the workspace root.
  # root: '.'

  # Name of `tsconfig.json` file in the TypeScript root.
  # rootConfigFileName: 'tsconfig.json'

  # Name of the config file in the workspace root that defines shared compiler
  # options for all project reference based config files.
  # rootOptionsConfigFileName: 'tsconfig.options.json'

  # Update a project's `tsconfig.json` to route the `outDir` compiler option
  # to moon's `.moon/cache` directory.
  routeOutDirToCache: true

  # Sync a project's dependencies as project references within the
  # project's `tsconfig.json` and the workspace root `tsconfig.json`.
  syncProjectReferences: true

  # Sync a project's project references as import aliases to the `paths`
  # compiler option in each applicable project.
  syncProjectReferencesToPaths: true